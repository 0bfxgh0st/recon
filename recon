#!/bin/bash

# Recon - Fast & light first-look scanner by 0bfxgh0st*

if [[ $(id -u) != "0" ]]
then
	printf "%s\n" "This program needs root privileges"
	exit
fi

COL_MAG_MARK="\e[1;32m"
COL_YELLOW_MARK="\e[1;33m"
COL_BLUE_MARK="\e[1;34m"
COL_RED="\e[0;31m"
COL_MAG="\e[0;32m"
COL_YELLOW="\e[0;33m"
COL_HBEAT="\e[5;31m"
COL_END="\e[0m"

tmp_dir="/tmp/recon_logs/"
target_host="$1"
portscan_file="$tmp_dir$target_host-nps.log"
hardcoded_wordlist="/usr/share/dirb/wordlists/common.txt"
mkdir "$tmp_dir" 2>/dev/null

printf "${COL_MAG}"
cat << "EOF"

    .o oOOOOOOOo                                            OOOo
    Ob.OOOOOOOo  OOOo.      oOOo.                      .adOOOOOOO
    OboO"""""""""""".OOo. .oOOOOOo.    OOOo.oOOOOOo.."""""""""'OO
    OOP.oOOOOOOOOOOO "POOOOOOOOOOOo.   `"OOOOOOOOOP,OOOOOOOOOOOB'
    `O'OOOO'     `OOOOo"OOOOOOOOOOO` .adOOOOOOOOO"oOOO'    `OOOOo
    .OOOO'            `OOOOOOOOOOOOOOOOOOOOOOOOOO'            `OO
    OOOOO                 '"OOOOOOOOOOOOOOOO"`                oOO
   oOOOOOba.                .adOOOOOOOOOOba               .adOOOOo.
  oOOOOOOOOOOOOOba.    .adOOOOOOOOOO@^OOOOOOOba.     .adOOOOOOOOOOOO
 OOOOOOOOOOOOOOOOO.OOOOOOOOOOOOOO"`  '"OOOOOOOOOOOOO.OOOOOOOOOOOOOO
 "OOOO"       "YOoOOOOMOIONODOO"`  .   '"OOROAOPOEOOOoOY"     "OOO"
    Y           'OOOOOOOOOOOOOO: .oOOo. :OOOOOOOOOOO?'         :`
    :            .oO%OOOOOOOOOOo.OOOOOO.oOOOOOOOOOOOO?         .
    .            oOOP"%OOOOOOOOoOOOOOOO?oOOOOO?OOOO"OOo
                 '%o  OOOO"%OOOO%"%OOOOO"OOOOOO"OOO':
                      `$"  `OOOO' `O"Y ' `OOOO'  o             .
    .                  .     OP"          : o     .
                              :
                              .

EOF

printf "${COL_END}"
printf "[${COL_RED}R3C0N${COL_END}] by ${COL_MAG}0bfxgh0st*${COL_END} 4 ${COL_YELLOW}WWA${COL_END} with ${COL_HBEAT}❤${COL_END}\n"

function help(){

	printf "%s\n"
	printf "%s\n\n" "Auto recon:"
        printf "%s\n" "      Tcp port scan"
        printf "%s\n" "      Web services recognizement"
        printf "%s\n" "      Web services directories fuzzing (light)"
        printf "%s\n" "      Check mysql service misconfiguration root:<blank> credentials on mysql database"
        printf "%s\n" "      Check smb service no-password & shared folders enumeration"
        printf "%s\n\n" "      Check ftp service misconfiguration anonymous/ftp:<blank> credentials"
	printf "%s\n\n" "Options:"
	printf "%s\n\n" "      --axfr          perform axfr attack (dns is required)"
        printf "%s\n\n" "Usage recon <host>"
	printf "%s\n\n" "Examples:"
	printf "%s\n" "recon 10.0.2.15"
	printf "%s\n" "recon 10.0.2.15 --axfr ghostlab.sv"

}

function _gmsg_(){

        arr[0]="Whoops Team Views CVE-2022-23242 ${COL_YELLOW}WildZarek${COL_END}\n\n"
        arr[1]="Captain Captain, I see an island :) ${COL_YELLOW}WeaponShotgun${COL_END}\n\n"
        arr[2]="Can you boost me? Can you bring me the keys? Can you make an autopwn for me? Can you CVE-me? Can you? ${COL_YELLOW}GatoGamer1155${COL_END}\n\n"
        arr[3]="Let's do some rev engees turn on radare, can you read me that red thing? :P ${COL_YELLOW}YoungerMaster${COL_END}\n\n"
        arr[4]="Hey I was thinking about this part of the code...oh wait, pull request is already done ${COL_YELLOW}RiJaba1${COL_END}\n\n"
        arr[5]="Tech me some wins ${COL_YELLOW}S4dbrd${COL_END}\n\n"
        arr[6]="B.O.T.N.E.T. created by ${COL_YELLOW}Binlaab${COL_END}\n\n"
        arr[7]="${COL_YELLOW}Cyberapocalypse 2022 whoohoo${COL_END} !\n\n"
        arr[8]="WWA for the ${COL_YELLOW}#15${COL_END} !\n\n"
	rand=$[$RANDOM % ${#arr[@]}]
        printf "${arr[$rand]}"

}

if [[ -z "$1" ]];
then
	help
	exit
fi

if [[ "$2" == "--secret" ]];
then
	_gmsg_
else
	printf "%s\n"
fi

if [[ "$2" == "--axfr" ]];
then
	if [[ -z "$3" ]]
	then
		printf "${COL_RED}Supply dns please${COL_END}\n\nExample:\nrecon 10.0.2.15 --axfr ghostlab.sv"
		exit
	else
		printf "[${COL_MAG_MARK}AXFR${COL_END}]"
		dig @"$target_host" "$3" axfr
		exit
	fi
fi

function os_detection(){

        osdetection=$(ping -c 1 -W 2 "$target_host" | grep -o "ttl=..." | sed 's/ttl=//g')

        if [ "$osdetection" -le "66" ]
        then
                printf "[${COL_MAG_MARK}OS${COL_END}] ${COL_YELLOW}Linux${COL_END} (99%%)\n"

        elif [ "$osdetection" -le "129" ]
        then
                printf "[${COL_MAG_MARK}OS${COL_END}] ${COL_YELLOW}Windows${COL_END} (99%%)\n"
        fi

}

os_detection 2>/dev/null

# Nmap scan
nmap -v "$target_host" -p- --open --min-rate 5000 -oN "$portscan_file" --script=ftp-anon
printf "%s\n"

# grepin' nmap results
web_service=$(grep "open" "$portscan_file" | grep "http" | grep -v "# Nmap")
smb_service=$(grep "netbios-ssn" "$portscan_file")
ftp_anon=$(grep "ftp-anon: Anonymous FTP login allowed" "$portscan_file")
mysql_service=$(grep "mysql" "$portscan_file")
mysql_ports=$(grep "open" "$portscan_file" | grep "mysql" | awk -F'/' '{print $1}')
ftp_ports=$(grep "open" "$portscan_file" | grep "ftp" | grep -v "# Nmap" | awk -F'/' '{print $1}')

function web_recon(){

	websrv_ports=$(printf "$web_service" | awk -F'/' '{print $1}')
	for port in $websrv_ports
	do
		printf "\n[${COL_YELLOW_MARK}i${COL_END}] [${COL_MAG_MARK}WHATWEB${COL_END}]\n"
		whatweb "$target_host:$port"
		printf "\n[${COL_MAG_MARK}+${COL_END}] [${COL_MAG_MARK}WFUZZ${COL_END}]\n*stage 1 --> (light web path fuzzing wordlist:$hardcoded_wordlist)\n"
		wfuzz -t 100 -c --hc=404 -w "$hardcoded_wordlist" "$target_host:$port/FUZZ" 2>/dev/null
		printf "*stage 2 --> (light permutated extensions fuzzing wordlist:$hardcoded_wordlist)\n"
		wfuzz -t 100 -c --hc=404 -z file,"$hardcoded_wordlist" -z list,php-html-txt "$target_host:$port/FUZZ.FUZ2Z" 2>/dev/null
	done

}

function smb(){

        printf "[${COL_YELLOW_MARK}i${COL_END}] [${COL_MAG_MARK}SMB${COL_END}]\n"
        smbmap -H "$target_host" 2>&1
        smbclient -L "$target_host" -N 2>/dev/null > "$tmp_dir$target_host"-smbproc
        cat "$tmp_dir$target_host"-smbproc
        grep '\$\|Disk\|IPC' "$tmp_dir$target_host"-smbproc | awk '{print $1}' > "$tmp_dir$target_host"-smbsharedname
        file=$(cat "$tmp_dir$target_host"-smbsharedname)
        for sharename in $file
        do
                printf "[${COL_BLUE_MARK}$sharename${COL_END}]\n"
                smbclient -N \\\\$target_host\\$sharename -c 'pwd;ls'
        done
 
}

function mysql(){

	for port in $mysql_ports
	do
	# PHP script one line to check default credentialas connection to mysql database <host>,'root','','mysql'
		php -r "\$db = mysqli_connect(\"$target_host:$port\",'root','','mysql');if (\$db){	echo(\"┌─[${COL_MAG_MARK}+${COL_END}] [${COL_MAG_MARK}mysql${COL_END}]\n└─(Credentials for mysql $target_host:$port)\n  [${COL_YELLOW_MARK}user${COL_END}:${COL_YELLOW_MARK}root${COL_END}][${COL_YELLOW_MARK}password${COL_END}:]\n\" . \"\n\");}else{	echo(\"\n[${COL_RED}-${COL_END}] [mysql] Denied access on $target_host:$port\" . \"\n\");};" 2>/dev/null
	done

}

if [[ "$mysql_service" == *"mysql"* ]];
then
	mysql
fi

if [[ "$ftp_anon" == *"ftp-anon: Anonymous FTP login allowed"* ]]
then
	printf "┌─[${COL_MAG_MARK}+${COL_END}] [${COL_MAG_MARK}ftp${COL_END}]\n"
	printf "└─(Credentials for ftp $target_host:$ftp_ports)\n"
        printf "  [${COL_YELLOW_MARK}user${COL_END}:${COL_YELLOW_MARK}ftp${COL_END}][${COL_YELLOW_MARK}password${COL_END}:]\n"
	printf "  [${COL_YELLOW_MARK}user${COL_END}:${COL_YELLOW_MARK}anonymous${COL_END}][${COL_YELLOW_MARK}password${COL_END}:]\n\n"
fi

if [[ "$smb_service" == *"netbios-ssn"* ]];
then
	smb
fi

if [[ "$web_service" == *"http"* ]];
then
	web_recon
fi
