#!/bin/bash

################
# Recon poc    #
# by 0bfxgh0st #
################

COL_MAG_MARK="\e[1;32m"
COL_YELLOW_MARK="\e[1;33m"
COL_BLUE_MARK="\e[1;34m"
COL_RED="\e[0;31m"
COL_MAG="\e[0;32m"
COL_YELLOW="\e[0;33m"
COL_HBEAT="\e[5;31m"
COL_END="\e[0m"

if [[ $(id -u) != "0" ]]
then
	printf "%s\n" "This program needs root privileges"
	exit
fi

printf "${COL_MAG}"
cat << "EOF"

    .o oOOOOOOOo                                            OOOo
    Ob.OOOOOOOo  OOOo.      oOOo.                      .adOOOOOOO
    OboO"""""""""""".OOo. .oOOOOOo.    OOOo.oOOOOOo.."""""""""'OO
    OOP.oOOOOOOOOOOO "POOOOOOOOOOOo.   `"OOOOOOOOOP,OOOOOOOOOOOB'
    `O'OOOO'     `OOOOo"OOOOOOOOOOO` .adOOOOOOOOO"oOOO'    `OOOOo
    .OOOO'            `OOOOOOOOOOOOOOOOOOOOOOOOOO'            `OO
    OOOOO                 '"OOOOOOOOOOOOOOOO"`                oOO
   oOOOOOba.                .adOOOOOOOOOOba               .adOOOOo.
  oOOOOOOOOOOOOOba.    .adOOOOOOOOOO@^OOOOOOOba.     .adOOOOOOOOOOOO
 OOOOOOOOOOOOOOOOO.OOOOOOOOOOOOOO"`  '"OOOOOOOOOOOOO.OOOOOOOOOOOOOO
 "OOOO"       "YOoOOOOMOIONODOO"`  .   '"OOROAOPOEOOOoOY"     "OOO"
    Y           'OOOOOOOOOOOOOO: .oOOo. :OOOOOOOOOOO?'         :`
    :            .oO%OOOOOOOOOOo.OOOOOO.oOOOOOOOOOOOO?         .
    .            oOOP"%OOOOOOOOoOOOOOOO?oOOOOO?OOOO"OOo
                 '%o  OOOO"%OOOO%"%OOOOO"OOOOOO"OOO':
                      `$"  `OOOO' `O"Y ' `OOOO'  o             .
    .                  .     OP"          : o     .
                              :
                              .

EOF

printf "${COL_END}"
printf "[${COL_RED}R3C0N${COL_END}] by ${COL_MAG}0bfxgh0st${COL_END} 4 ${COL_YELLOW}WWA${COL_END} with ${COL_HBEAT}❤${COL_END}\n\n"

function _help_(){

        printf "%s\n" "~ Nmap tcp scan"
        printf "%s\n" "~ Web services scan"
        printf "%s\n" "~ Directory fuzzing (/usr/share/dirb/wordlists/common.txt)"
        printf "%s\n" "~ Mysql scan"
        printf "%s\n" "~ SMB scan"
        printf "%s\n\n" "~ FTP scan"
        printf "%s\n" "Usage recon <host>"

}

if [[ -z "$1" ]];
then
	_help_
	exit
fi

# some hardcoded stuff
tmp_dir="/tmp/recon_logs/"
portscan_file="/tmp/recon_logs/$1-nps.log"
target_host="$1"
hardcoded_wordlist="/usr/share/dirb/wordlists/common.txt"
mkdir "$tmp_dir" 2>/dev/null

function _os_detection_(){

        osdetection=$(ping -c 1 -W 2 "$1" | grep -o "ttl=..." | sed 's/ttl=//g')

        if [ "$osdetection" -le "66" ]
        then
                printf "[${COL_MAG_MARK}OS${COL_END}] ${COL_YELLOW}Linux${COL_END} (99%%)\n"

        elif [ "$osdetection" -le "129" ]
        then
                printf "[${COL_MAG_MARK}OS${COL_END}] ${COL_YELLOW}Windows${COL_END} (99%%)\n"
        fi

}

_os_detection_ "$1"

# Nmap scan
nmap -v "$1" -p- --open --min-rate 5000 -oN "$portscan_file" --script=ftp-anon
printf "\n"

# grepin' some stuff
find_open=$(cat "$portscan_file" | grep "open" | grep -v "|")
find_webservice=$(cat "$portscan_file" | grep "open" | grep "http" | grep -v "|")
find_smb_service=$(cat "$portscan_file" | grep "netbios-ssn")
find_ftp_anon=$(cat "$portscan_file" | grep "ftp-anon: Anonymous FTP login allowed")
find_mysql=$(cat "$portscan_file" | grep "mysql")
mysql_ports=$(cat "$portscan_file" | grep "open" | grep "mysql" | awk -F'/' '{print $1}')

function _fuzz_(){

	http_ports=$(printf "$find_open" | grep "http")
	websrv_port=$(printf "$http_ports" | awk -F'/' '{print $1}')
	printf "\n[${COL_MAG_MARK}+${COL_END}] [${COL_MAG_MARK}fuzzin server${COL_END}]\n"
	# Loop for recon web services
	#
	for i in $websrv_port
	do
		whatweb "$1"
                dirb http://"$target_host:$i" "$hardcoded_wordlist" -r
		printf -- "\n\n"
	done

}

function _smb_(){

        printf "[${COL_MAG_MARK}+${COL_END}] [${COL_MAG_MARK}smb${COL_END}]\n"
        crackmapexec smb "$1"
        smbmap -H "$1" 2>&1
        smbclient -L "$1" -N 2>/dev/null > /tmp/recon_logs/"$1"proc
        cat /tmp/recon_logs/"$1"proc
        grep '\$\|Disk\|IPC' /tmp/recon_logs/"$1"proc | awk '{print $1}' > /tmp/recon_logs/"$1"tmpfile
        printf "[${COL_YELLOW_MARK}~${COL_END}] [${COL_MAG_MARK}smb knocker${COL_END}]\n"
        file=$(cat /tmp/recon_logs/"$1"tmpfile)
        for i in $file
        do
                printf "[${COL_BLUE_MARK}$i${COL_END}]\n"
                smbclient -N \\\\$1\\$i -c 'pwd;ls'
        done
 
}

function _mysql_loop_(){

	for j in $mysql_ports
	do
	# PHP script one line to check default credentialas connection to mysql database <host>,'root','','mysql'
		php -r "\$db = mysqli_connect(\"$target_host:$j\",'root','','mysql');if (\$db){	echo(\"┌─[${COL_MAG_MARK}+${COL_END}] [${COL_MAG_MARK}mysql${COL_END}]\n└─(Credentials for mysql $target_host:$j)\n  [${COL_YELLOW_MARK}user${COL_END}:${COL_YELLOW_MARK}root${COL_END}][${COL_YELLOW_MARK}password${COL_END}:]\n\" . \"\n\");}else{	echo(\"\n[${COL_RED}-${COL_END}] [mysql] Denied access on $target_host:$j\" . \"\n\");};" 2>/dev/null
	done

}

if [[ "$find_mysql" == *"mysql"* ]];
then
	_mysql_loop_
fi

if [[ "$find_ftp_anon" == *"ftp-anon: Anonymous FTP login allowed"* ]]
then
	printf "┌─[${COL_MAG_MARK}+${COL_END}] [${COL_MAG_MARK}ftp${COL_END}]\n"
	printf "└─(Credentials for ftp $1)\n"
        printf "  [${COL_YELLOW_MARK}user${COL_END}:${COL_YELLOW_MARK}ftp${COL_END}][${COL_YELLOW_MARK}password${COL_END}:]\n"
	printf "  [${COL_YELLOW_MARK}user${COL_END}:${COL_YELLOW_MARK}anonymous${COL_END}][${COL_YELLOW_MARK}password${COL_END}:]\n\n"
fi

if [[ "$find_smb_service" == *"netbios-ssn"* ]];
then
	_smb_ "$1"
fi

if [[ "$find_open" == *"http"* ]];
then
	_fuzz_ "$1"
fi
